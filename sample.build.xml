<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ /**
  ~  IDEA Configurator
  ~  Copyright (C) 2006 Justin Tomich<tomichj at gmail dot com>
  ~
  ~  This program is free software; you can redistribute it and/or
  ~  modify it under the terms of the GNU General Public License as
  ~  published by the Free Software Foundation; either version 2 of the
  ~  License, or (at your option) any later version.
  ~
  ~  This program is distributed in the hope that it will be useful, but
  ~  WITHOUT ANY WARRANTY; without even the implied warranty of
  ~  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  ~  General Public License for more details.
  ~
  ~  You should have received a copy of the GNU General Public License
  ~  along with this program; if not, write to the Free Software
  ~  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  ~  */
  -->

<project name="sample.build.xml" default="big">
<description>
  Sample build with idea configuration targets
</description>


  <property file="build.properties"/>

  <!-- ============================================================== -->
  <!--          B  U  I  L  D    P  R  O  P  E  R  T  I  E  S         -->
  <!-- ============================================================== -->

  <property name="src.dir" location="src-dir1"/>
  <path id="src.path" location="src-dir2"/>
  <path id="test.path" location="test-dir"/>
  <property name="build.classes.dir" location="whatever"/>
  <property name="build.test.classes.dir" location="whatever.tests"/>


  <!-- ============================================================== -->
  <!--             L  I  B      P  R  O  P  E  R  T  I  E  S          -->
  <!-- ============================================================== -->

  <!-- a couple of dummy library jars and a classpath property built -->
  <property name="lib1.jar" value="lib/lib1.jar"/>
  <property name="lib2.jar" value="lib/lib2.jar"/>
  <property name="small.classpath" value="${lib1.jar}:${lib2.jar}"/>

  <!-- the idea-configurator jar is needed for the ideamodule task -->
  <property name="configurator.dist"
            location="dist/idea-configurator-${release}"/>
  <property name="idea-configurator.jar"
            location="${configurator.dist}/idea-configurator-${release}.jar"/>
  <!-- suck in ideamodule task -->
  <taskdef classpath="${idea-configurator.jar}" resource="taskdef.properties"/>


  <!-- ============================================================== -->
  <!--                      T  A  R  G  E  T  S                       -->
  <!-- ============================================================== -->

  <target name="big" description="generate a reasonably large module config">
    <!-- use a path for the excludes -->
    <path id="excludes">
      <pathelement location="dist"/>
      <pathelement location="build"/>
    </path>
    <ideajavamodule moduleFile="big.build.sample.iml"
                outputDir="${build.classes.dir}"
                testsOutputDir="${build.test.classes.dir}">
      <src path="${src.dir}"/>
      <src path="src2:src3"/>
      <tests refid="test.path"/>
      <tests path="test2"/>
      <excludes path="dist"/>
      <excludes path="build"/>
      <excludes refid="excludes"/>
      <!--<classpathfilter pattern=".*some.*\.jar"/>-->
      <!--<classpathfilter pattern=".*another.*\.jar"/>-->
      <dependencies>
        <modulesource/>
        <jdk/>
        <classpath path="foo.jar:bar.jar"/>
        
        <modulelibrary>
          <classes file="some-lib.jar"/>
          <javadoc location="some-lib-doc"/>
          <javadoc location="some-lib-doc2"/> <!-- multiple javadocs 4 fun --> 
          <source location="some-lib-src.jar"/>
          <source location="some-lib-src2.jar"/>
        </modulelibrary>
        <module name="foobly-module"/>
      </dependencies>
    </ideajavamodule>
  </target>


  <target name="uses-sourceproperty"
          description="uses sourceproperty to associate source with a lib">
    <!-- source jar, property name begins with same value used in
    sourceproperty below. Could be extracted to a separate property... -->
    <property name="source.lib1" value="lib/foo-src.jar"/>

    <ideajavamodule moduleFile="uses-sourceproperty.build.sample.iml"
                outputDir="${build.classes.dir}"
                testsOutputDir="${build.test.classes.dir}"
                classpath="${small.classpath}"
                sourceproperty="source">
    </ideajavamodule>
  </target>


  <target name="classpath-first"
          description="classpath comes before module library">
    <ideajavamodule moduleFile="classpath-first.build.sample.iml"
                outputDir="${build.classes.dir}">
      <dependencies>
        <classpath path="${small.classpath}"/>
        <modulelibrary>
          <classes file="moduleLibraryJar.jar"/>
        </modulelibrary>
      </dependencies>
    </ideajavamodule>
  </target>




  <target name="idea-lib" description="has an idealib">
    <ideajavamodule moduleFile="idea-lib.sample.build.iml"
                    outputDir="${build.classes.dir}">
      <dependencies>
        <idealib name="j2ee.jar"/>
        <modulelibrary>
          <classes file="moduleLibraryJar.jar"/>
        </modulelibrary>
      </dependencies>
    </ideajavamodule>
  </target>




  <target name="modulelib-first"
          description="classpath comes before module library">
    <ideajavamodule moduleFile="modulelib-first.build.sample.iml"
                outputDir="${build.classes.dir}">
      <dependencies>
        <modulelibrary>
          <classes file="moduleLibraryJar.jar"/>
        </modulelibrary>
        <classpath path="${small.classpath}"/>
      </dependencies>
    </ideajavamodule>
  </target>




  <target name="javadocurl-attribute" description="javadoc url via attribute">
    <ideajavamodule moduleFile="javadocurl-attribute.build.sample.iml"
                outputDir="${build.classes.dir}">
      <dependencies>
        <modulelibrary javadocurl="http://foo.com">
          <classes file="moduleLibraryJar.jar"/>
        </modulelibrary>
        <classpath path="${small.classpath}"/>
      </dependencies>
    </ideajavamodule>
  </target>




  <target name="javadocurl-list" description="javadoc urls via nested element">
    <ideajavamodule moduleFile="javadocurl-list.build.sample.iml"
                outputDir="${build.classes.dir}">
      <dependencies>
        <modulelibrary>
          <classes file="moduleLibraryJar.jar"/>
          <javadocurl url="http://foo.com"/>
          <javadocurl url="http://bar.com"/>
          <javadocurl url="http://baz.com"/>
        </modulelibrary>
        <classpath path="${small.classpath}"/>
      </dependencies>
    </ideajavamodule>
  </target>


  <!-- classpath attribute, classpath nested element, module lib element -->
  <!-- note: classpath nest elements go at end of dependencies -->
  <target name="crazy-classpath" description="uses all classpath setters">
    <ideajavamodule moduleFile="crazy-classpath.build.sample.iml"
                classpath="lib6.jar:lib7.jar"
                outputDir="${build.classes.dir}">
      <dependencies>
        <modulelibrary>
          <classes file="lib/moduleLibraryJar.jar"/>
          <javadoc path="lib/moduleLibraryJarJavadoc/doc/api"/>
          <source path="lib/moduleLibraryJarSource.jar"/>
        </modulelibrary>
        <classpath path="${small.classpath}"/>
      </dependencies>
    </ideajavamodule>
  </target>
  

  <target name="excludes-path" description="multiple excludes in property">
    <ideajavamodule moduleFile="excludes-path.build.sample.iml"
                    outputDir="${build.classes.dir}"
                    excludes="build:dist"/>
  </target>


  

  <target name="very-small-web">
    <ideawebmodule moduleFile="very-small-web.build.sample.iml">
      <java outputDir="${build.classes.dir}">
        <src path="${src.dir}"/>
        <dependencies>
          <modulesource/>
		      <jdk/>
        </dependencies>
      </java>
      <build>
        <war file="whatever/big.war" buildOnFrameDeactivation="false"
             allowFilesOutsideExploded="false"/>
        <exploded dir="exploded" excluded="true" synchronize="true"/>
      </build>
      <deployment>
        <webxml file="WEB-INF/web.xml"/>
        <directory projectDir="resources" archiveDir="/"/>
        <directory projectDir="WEB-INF" archivedir="/WEB-INF"/>
      </deployment>
    </ideawebmodule>
  </target>


  

  <target name="smallish-web">
    <ideawebmodule moduleFile="smallish-web.build.sample.iml">
      <java outputDir="${build.classes.dir}">
        <src path="${src.dir}"/>
        <dependencies>
          <modulelibrary classes="foo.jar"/>
        </dependencies>
      </java>
      <build>
        <war file="whatever/big.war" buildOnFrameDeactivation="false"
             allowFilesOutsideExploded="false"/>
        <exploded dir="exploded" excluded="true" synchronize="true"/>
      </build>
      <deployment>
        <webxml file="WEB-INF/web.xml"/>
        <copymodulelib jar="foo.jar"/>
        <copymodulelib jar="bar.jar" linkviamanifest="true"/>
        <copymodulelib jar="baz.jar" archivePath="/WEB-INF/bizzle/baz.jar"/>
        <copymodulelib jar="jaz.jar" archivePath="/chongo/jaz.jar"
                       linkviamanifest="true"/>
        <weblogic version="9.x"/>
        <directory projectDir="resources" archiveDir="/"/>
        <directory projectDir="WEB-INF" archiveDir="/WEB-INF"/>
      </deployment>
    </ideawebmodule>
  </target>


  
  
  <target name="webby">
    <path id="build.classpath">
      <pathelement location="foo.jar"/>
      <pathelement location="bar.jar"/>
      <pathelement location="baz.jar"/>
    </path>
    <ideawebmodule moduleFile="webby.build.sample.iml">
      <java outputDir="${build.classes.dir}">
        <src path="${src.dir}"/>
        <dependencies>
          <modulelibrary classes="foo.jar"/>
          <modulelibrary classes="bar.jar"/>
          <modulelibrary classes="baz.jar"/>
        </dependencies>
      </java>
      <build>
        <war file="whatever/big.war" buildOnFrameDeactivation="false"
             allowFilesOutsideExploded="false"/>
        <exploded dir="exploded" excluded="true" synchronize="true"/>
      </build>
      <deployment>
        <webxml file="WEB-INF/web.xml"/>
        <copymodulelib jar="lib/foo.jar"/>
        <copyprojectlib name="beanutils" linkviamanifest="false"/>
        <copygloballib name="someLib" linkviamanifest="true"
                       archivePath="/someDumDirectory/"/>
        <copymodulelibpath refid="build.classpath"/>
        <copymodulelibpath path="abc.jar:lib/def.jar:lib/ghi.jar"/>
        <ignoremodulelib jar="ignoreLib.jar"/>
        <weblogic version="9.x"/>
        <directory projectDir="resources" archiveDir="/"/>
        <directory projectDir="WEB-INF" archivedir="/WEB-INF"/>
      </deployment>
    </ideawebmodule>
  </target>
</project>
